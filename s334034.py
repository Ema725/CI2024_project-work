# Copyright Â© 2024 Giovanni Squillero <giovanni.squillero@polito.it>
# https://github.com/squillero/computational-intelligence
# Free under certain conditions â€” see the license for details.

import numpy as np

# All numpy's mathematical functions can be used in formulas
# see: https://numpy.org/doc/stable/reference/routines.math.html

def safe_divide(a, b):
    return np.where(np.abs(b) > 1e-6, np.divide(a, b), 1.0)

def safe_log(x):
    x_safe = np.where(x <= 1e-6, 1e-6, x)
    return np.log(np.abs(x_safe))

def safe_reciprocal(x: np.ndarray) -> np.ndarray:
    # check if x is a numpy array
    x = np.asarray(x)  
    return np.where(x == 0, 0, np.reciprocal(x))

def safe_sqrt(x):
    return np.sqrt(np.abs(x))

#mse 7.12594e-32
def f1(x: np.ndarray) -> np.ndarray:
    return np.sin(x[0])

#mse 2.03839e+14
def f2(x: np.ndarray) -> np.ndarray:
    return np.add(np.multiply(np.add(np.add(np.multiply(np.add(np.multiply(99.0904, x[1]), np.add(np.add(np.multiply(99.0904, x[1]), np.add(np.multiply(np.cos(x[2]), np.multiply(x[0], 59.9297)), np.add(np.add(np.add(99.0904, np.multiply(x[1], 99.0904)), np.multiply(99.0904, x[1])), np.add(np.multiply(np.sin(np.subtract(safe_sqrt(-3.78135), np.absolute(x[0]))), np.multiply(np.add(np.sin(np.sin(np.sin(np.sin(x[2])))), np.add(x[1], x[2])), np.add(np.multiply(np.absolute(76.9452), safe_log(99.0904)), 99.0904))), np.multiply(x[1], 72.8258))))), 56.4834)), 34.833), np.multiply(np.add(99.0904, np.multiply(99.0904, x[2])), 99.0904)), np.multiply(np.add(np.multiply(np.add(np.add(np.add(np.add(np.sin(x[0]), np.sin(np.add(safe_log(np.add(safe_sqrt(safe_sqrt(x[2])), x[1])), np.add(x[0], np.sin(x[0]))))), np.sin(safe_reciprocal(safe_divide(x[1], -0.964158)))), np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(x[2]))))))), np.sin(np.sin(x[1]))), np.add(np.multiply(x[1], 30.7669), np.add(np.add(np.multiply(np.sin(x[2]), 99.0904), np.add(np.multiply(x[1], np.absolute(44.0859)), np.add(np.add(np.sin(x[2]), np.multiply(x[0], 56.4834)), np.multiply(x[2], 50.8915)))), np.add(x[2], np.multiply(x[2], 99.0904))))), 99.0904), np.add(safe_log(np.multiply(np.multiply(np.multiply(x[0], np.subtract(np.multiply(-70.9694, -70.9694), x[2])), 99.0904), 99.0904)), np.multiply(x[0], 34.833)))), 30.7669), np.multiply(np.add(np.multiply(np.add(np.multiply(np.add(np.sin(np.sin(x[0])), np.sin(np.absolute(72.8258))), 30.7669), safe_log(np.add(np.multiply(x[2], 56.4834), np.multiply(x[1], 56.4834)))), 30.7669), np.multiply(np.add(np.add(safe_log(np.add(np.add(x[2], np.multiply(x[0], 72.8258)), np.add(np.multiply(x[2], 56.4834), np.multiply(x[1], 56.4834)))), safe_sqrt(99.0904)), np.multiply(x[0], 34.833)), 34.833)), np.absolute(np.multiply(np.multiply(56.4834, safe_log(99.0904)), safe_log(99.0904)))))

#mse 2.7k
def f3(x: np.ndarray) -> np.ndarray:
    return np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(safe_log(np.subtract(np.subtract(safe_log(np.sin(84.2139)), safe_log(safe_log(safe_log(safe_sqrt(safe_divide(-30.747, x[0])))))), safe_log(safe_log(safe_log(74.9712))))), safe_log(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.absolute(x[0])))))))))))))))))))))))))))))))))))))))))))))))))))), np.sin(safe_log(np.multiply(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(np.sin(safe_log(np.multiply(-3.89389, np.cos(x[1]))))))))))))))), safe_log(safe_log(safe_log(np.absolute(np.multiply(x[1], safe_log(89.1168)))))))))), np.multiply(np.sin(x[1]), safe_log(x[1]))), safe_log(np.multiply(np.absolute(np.sin(np.multiply(safe_log(np.absolute(np.exp(x[1]))), np.sin(x[1])))), np.multiply(np.exp(x[1]), np.multiply(np.absolute(safe_log(np.multiply(np.cos(89.1168), np.multiply(-3.89389, np.cos(x[1]))))), np.multiply(np.absolute(np.absolute(np.absolute(safe_log(np.multiply(np.cos(safe_log(safe_log(np.multiply(x[1], np.cos(np.multiply(-4.43319, np.cos(x[1]))))))), np.multiply(-4.43319, np.cos(x[1]))))))), np.multiply(np.absolute(np.multiply(safe_log(np.multiply(np.sin(np.sin(safe_log(np.multiply(safe_log(np.cos(x[1])), np.cos(safe_log(89.1168)))))), safe_log(x[1]))), safe_log(np.multiply(-4.43319, np.cos(x[1]))))), np.multiply(np.exp(x[1]), safe_log(safe_log(safe_log(np.multiply(89.1168, safe_log(safe_log(safe_log(np.exp(np.subtract(x[1], np.sin(np.sin(-3.89389))))))))))))))))))), np.subtract(np.subtract(np.subtract(x[1], np.sin(x[1])), np.sin(np.add(np.multiply(safe_log(x[1]), -78.8082), np.multiply(np.multiply(-3.89389, np.cos(safe_log(np.sin(84.2139)))), np.cos(x[1]))))), np.cos(x[0]))), x[1]), x[1]), safe_log(x[1])), np.multiply(safe_log(safe_log(84.2139)), x[2])), x[1]), x[1]), x[1]), np.subtract(x[1], np.sin(np.add(-3.89389, np.multiply(-4.43319, np.cos(x[1])))))), np.subtract(x[1], np.sin(safe_log(np.subtract(x[1], np.sin(np.subtract(-96.1926, np.subtract(x[1], 10.6279)))))))), safe_log(safe_log(safe_log(safe_sqrt(safe_divide(-30.747, x[0])))))), x[2]), np.multiply(np.sin(10.6279), safe_log(safe_log(np.multiply(-4.43319, safe_log(safe_log(np.multiply(x[1], np.cos(np.multiply(-3.89389, np.cos(x[1]))))))))))), x[1]), x[2]), np.multiply(np.sin(x[1]), safe_log(-3.89389))), np.subtract(x[1], np.sin(x[1]))), x[1])

#mse 4.743
def f4(x: np.ndarray) -> np.ndarray:
    return np.add(np.exp(safe_divide(np.cos(np.subtract(safe_log(safe_sqrt(15.835)), np.sin(np.cos(x[1])))), np.subtract(np.absolute(safe_divide(safe_divide(np.cos(safe_divide(np.cos(safe_divide(np.multiply(x[1], x[1]), 15.835)), np.subtract(np.absolute(np.multiply(np.absolute(-34.2554), safe_divide(np.absolute(-4.54801), 74.96))), np.subtract(np.absolute(safe_divide(safe_divide(np.cos(np.add(-60.8505, np.sin(np.sin(np.sin(np.sin(np.sin(x[1]))))))), -34.2554), np.sin(x[1]))), np.cos(np.subtract(safe_log(safe_sqrt(15.835)), 15.835)))))), 74.96), np.sin(x[1]))), np.sin(-34.2554)))), np.multiply(np.add(np.subtract(np.sin(np.add(np.add(x[1], x[1]), safe_divide(x[1], safe_sqrt(np.subtract(np.absolute(safe_divide(safe_divide(np.sin(-34.2554), -34.2554), x[1])), safe_sqrt(15.835)))))), safe_divide(x[1], np.subtract(safe_divide(np.sin(np.absolute(np.cos(x[1]))), np.absolute(-4.54801)), np.cos(np.cos(x[1]))))), x[1]), safe_divide(np.cos(safe_divide(np.sin(np.cos(x[1])), np.subtract(np.absolute(safe_divide(np.absolute(np.absolute(np.multiply(np.absolute(np.add(np.subtract(np.subtract(np.subtract(np.subtract(-29.3403, np.cos(np.multiply(x[0], np.sin(np.sin(np.cos(x[1])))))), x[0]), np.subtract(np.add(np.sin(x[0]), x[0]), np.exp(np.sin(np.absolute(np.cos(x[1])))))), x[0]), np.absolute(x[0]))), safe_divide(-4.54801, 74.96)))), np.subtract(np.add(-60.8505, np.absolute(x[1])), np.multiply(x[0], -4.54801)))), np.subtract(np.absolute(safe_divide(safe_reciprocal(np.absolute(np.add(np.subtract(-29.3403, np.cos(safe_reciprocal(np.sin(x[1])))), np.absolute(np.add(x[1], x[1]))))), np.absolute(x[1]))), np.subtract(np.absolute(safe_divide(safe_divide(np.absolute(np.sin(x[1])), safe_divide(x[1], np.subtract(x[1], np.sin(np.sin(np.cos(np.add(x[1], np.absolute(np.absolute(np.subtract(np.absolute(np.exp(safe_divide(x[1], safe_sqrt(15.835)))), np.sin(-15.0728))))))))))), -34.2554)), np.subtract(np.absolute(safe_divide(safe_divide(np.sin(np.cos(x[1])), 80.1754), x[1])), np.sin(-34.2554))))))), x[1])))

#mse 2.560e-18
def f5(x: np.ndarray) -> np.ndarray:
    return np.multiply(np.add(np.add(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(safe_divide(np.multiply(np.add(1.57186, x[0]), np.subtract(-46.7494, 90.1601)), safe_sqrt(90.1601)), np.cos(x[0])), -26.1209), np.subtract(-26.1209, x[1])), np.cos(x[0])), np.cos(np.subtract(x[0], x[1]))), x[0]), np.cos(x[0])), np.cos(-26.1209)), x[0]), x[0]), x[0]), x[0]), x[0]), x[0]), np.subtract(x[0], x[1])), np.subtract(x[0], x[1])), np.subtract(x[0], x[1])), np.subtract(-26.1209, x[1])), x[0]), np.exp(x[0])), x[0]), x[0]), np.multiply(np.multiply(np.cos(x[0]), x[1]), x[1])), np.subtract(-26.1209, 3.76959)), x[0]), x[0]), x[0]), np.multiply(np.subtract(x[0], x[1]), x[0])), x[0]), np.multiply(np.subtract(x[0], x[1]), x[0])), x[0]), np.exp(x[0])), np.subtract(np.multiply(np.cos(np.subtract(x[0], safe_sqrt(np.multiply(76.0037, x[1])))), np.absolute(np.exp(x[0]))), x[1])), x[0]), np.exp(x[0])), x[0]), x[0]), x[0]), np.multiply(np.cos(np.subtract(x[0], -26.1209)), 3.76959)), x[0]), -40.5452), np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(np.subtract(safe_divide(np.multiply(np.add(1.57186, x[0]), np.subtract(-46.7494, 90.1601)), safe_sqrt(90.1601)), x[0]), np.multiply(np.cos(x[0]), safe_sqrt(np.multiply(np.subtract(-46.7494, 90.1601), x[1])))), np.subtract(np.subtract(-26.1209, x[1]), safe_log(np.multiply(76.0037, x[0])))), safe_log(safe_divide(x[1], np.multiply(x[0], x[0])))), x[0]), np.cos(np.subtract(x[0], x[1])))), np.exp(np.subtract(np.subtract(-26.1209, np.subtract(3.76959, x[1])), np.subtract(3.76959, x[1]))))

#mse 0.0087
def f6(x: np.ndarray) -> np.ndarray:
    return np.add(np.add(np.add(np.add(x[1], safe_reciprocal(safe_divide(46.6198, x[0]))), safe_reciprocal(-76.4785)), safe_reciprocal(86.5542)), np.subtract(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.add(x[1], safe_reciprocal(safe_divide(86.5542, np.multiply(x[1], np.add(x[1], -2.23146))))), safe_reciprocal(46.6198)), safe_reciprocal(safe_divide(46.6198, x[0]))), safe_reciprocal(46.6198)), safe_reciprocal(safe_divide(46.6198, np.multiply(x[1], -2.23146)))), safe_reciprocal(safe_divide(46.6198, x[0]))), safe_reciprocal(safe_divide(46.6198, x[0]))), safe_reciprocal(86.5542)), np.multiply(safe_divide(-31.1404, 86.5542), np.cos(np.absolute(20.1838)))), safe_reciprocal(safe_divide(np.absolute(-31.591), x[0]))), safe_reciprocal(safe_divide(86.5542, x[0]))), safe_reciprocal(46.6198)), safe_reciprocal(safe_divide(46.6198, np.subtract(np.sin(np.add(x[1], safe_log(np.add(52.0721, x[1])))), safe_reciprocal(46.6198))))), safe_reciprocal(-31.591)), safe_reciprocal(86.5542)), safe_reciprocal(safe_divide(np.absolute(np.absolute(15.3823)), x[0]))), safe_reciprocal(-31.591)), safe_divide(np.exp(x[1]), -31.591)), safe_reciprocal(46.6198)), safe_reciprocal(46.6198)), safe_reciprocal(86.5542)), safe_reciprocal(46.6198)), safe_reciprocal(safe_divide(46.6198, np.multiply(x[1], -2.23146)))), safe_reciprocal(safe_divide(48.5614, np.subtract(x[0], np.cos(x[1]))))), safe_reciprocal(86.5542)), safe_reciprocal(safe_divide(46.6198, x[0]))), safe_reciprocal(86.5542)), safe_reciprocal(safe_divide(safe_divide(46.6198, safe_reciprocal(20.1838)), np.multiply(x[1], -2.23146)))), safe_reciprocal(safe_divide(np.subtract(46.6198, safe_sqrt(86.5542)), x[0]))), safe_reciprocal(safe_divide(np.absolute(-31.591), np.multiply(x[1], -2.23146)))), safe_reciprocal(safe_divide(46.6198, np.subtract(x[0], np.cos(46.6198))))), safe_reciprocal(safe_divide(46.6198, np.multiply(x[1], -2.23146)))), safe_reciprocal(np.exp(34.1346))), safe_reciprocal(safe_divide(46.6198, x[0]))), x[0]))

#mse 388
def f7(x: np.ndarray) -> np.ndarray: 
    return np.add(np.absolute(np.absolute(np.absolute(np.absolute(np.multiply(np.multiply(np.multiply(np.absolute(np.absolute(np.absolute(np.absolute(np.absolute(np.multiply(np.multiply(np.multiply(np.absolute(np.multiply(np.subtract(np.sin(np.cos(np.subtract(np.subtract(np.absolute(np.exp(np.absolute(safe_sqrt(np.subtract(x[1], np.add(np.add(safe_sqrt(np.subtract(x[1], x[0])), x[1]), np.subtract(9, -1.96651))))))), safe_divide(np.cos(np.multiply(np.absolute(x[1]), safe_sqrt(x[1]))), np.sin(safe_sqrt(np.add(1, x[0]))))), -129))), -9), x[0])), np.cos(safe_sqrt(safe_sqrt(np.subtract(x[1], x[0]))))), safe_log(safe_sqrt(np.multiply(np.absolute(np.absolute(np.multiply(np.subtract(np.sin(np.absolute(np.exp(x[0]))), -8.70475), x[0]))), np.cos(safe_sqrt(safe_sqrt(np.subtract(x[1], x[0])))))))), -2)))))), np.absolute(x[1])), safe_log(np.absolute(np.sin(np.absolute(safe_sqrt(np.subtract(x[1], x[0]))))))), x[1]))))), np.absolute(np.absolute(np.add(np.add(np.absolute(np.absolute(np.absolute(np.absolute(np.multiply(np.multiply(np.multiply(np.absolute(np.absolute(np.absolute(np.multiply(np.multiply(np.multiply(np.absolute(np.add(np.subtract(np.absolute(np.exp(x[1])), -9), safe_log(safe_divide(safe_log(np.cos(safe_sqrt(safe_log(np.cos(safe_sqrt(safe_sqrt(safe_divide(np.multiply(safe_sqrt(1.87816), 1), np.subtract(x[1], x[0]))))))))), np.subtract(np.sin(np.absolute(x[1])), np.absolute(x[1])))))), np.cos(safe_sqrt(safe_sqrt(safe_divide(1, np.subtract(x[1], x[0])))))), safe_log(safe_sqrt(safe_sqrt(np.subtract(x[1], safe_divide(np.sin(23), np.subtract(x[1], x[0]))))))), x[1])))), np.add(-2.96492, np.absolute(np.sin(np.multiply(x[0], safe_sqrt(x[1])))))), np.cos(safe_sqrt(safe_sqrt(np.subtract(x[1], x[0]))))), safe_sqrt(2)))))), np.subtract(np.multiply(np.subtract(np.absolute(safe_log(np.absolute(np.sin(np.absolute(np.sin(np.absolute(safe_sqrt(np.subtract(x[1], x[0]))))))))), 2.94797), safe_sqrt(x[1])), np.sin(np.absolute(np.subtract(x[1], 27600))))), safe_sqrt(np.subtract(9, -1.96651))))))

#mse 51k
def f8(x: np.ndarray) -> np.ndarray:
    return np.multiply(np.absolute(np.add(np.add(x[5], np.sin(np.add(x[5], x[5]))), np.add(x[5], np.add(x[5], np.add(np.add(x[5], np.add(x[5], np.add(np.absolute(np.add(x[5], np.add(x[5], np.add(x[5], np.add(x[5], x[5]))))), np.add(x[5], x[5])))), np.add(np.sin(np.subtract(safe_log(x[5]), x[5])), np.add(np.add(np.add(x[5], np.sin(np.subtract(np.sin(np.sin(np.add(np.add(x[5], np.sin(np.sin(np.subtract(safe_log(x[5]), np.absolute(x[5]))))), np.sin(np.subtract(-12.7629, x[5]))))), x[5]))), np.sin(np.subtract(np.sin(np.add(safe_log(x[5]), np.multiply(np.sin(x[5]), x[5]))), x[5]))), np.add(np.add(np.add(np.add(np.add(np.add(x[5], np.sin(np.subtract(safe_reciprocal(safe_log(x[5])), x[5]))), safe_divide(np.exp(np.absolute(np.add(x[5], np.sin(np.absolute(x[5]))))), -12.7629)), safe_divide(np.add(-20.8314, np.add(np.add(np.add(np.add(np.add(np.add(np.add(np.exp(np.absolute(np.add(x[5], np.sin(np.absolute(np.add(x[5], np.sin(np.add(x[5], x[5])))))))), np.add(np.add(np.exp(np.absolute(np.add(x[5], np.sin(np.absolute(x[5]))))), np.absolute(np.subtract(-57.6834, np.subtract(87.8155, np.exp(x[5]))))), x[5])), safe_log(x[5])), x[5]), np.add(safe_log(x[5]), x[5])), np.multiply(np.sin(np.add(safe_log(np.add(safe_log(x[5]), x[5])), np.add(x[5], x[5]))), np.add(safe_log(x[5]), safe_log(safe_log(x[5]))))), x[5]), np.add(safe_log(np.add(x[5], safe_sqrt(np.exp(x[5])))), x[5]))), -11.9822)), x[5]), np.add(np.sin(np.subtract(-11.9822, x[5])), np.add(safe_divide(np.subtract(87.8155, np.exp(x[5])), -12.7629), np.sin(np.subtract(safe_log(x[5]), x[5]))))), np.add(x[5], safe_divide(np.exp(np.absolute(np.add(x[5], np.sin(np.absolute(np.multiply(np.sin(x[5]), x[5])))))), -12.7629)))))))))), np.add(np.add(x[5], np.add(x[5], np.add(np.exp(x[5]), np.add(x[5], np.add(x[5], np.add(np.add(x[5], np.sin(np.subtract(safe_log(x[5]), x[5]))), np.add(np.add(x[5], np.sin(np.subtract(safe_log(x[5]), x[5]))), np.add(np.add(x[5], np.add(x[5], np.sin(np.subtract(np.sin(np.add(safe_log(safe_log(x[5])), np.sin(x[5]))), x[5])))), np.add(x[5], np.add(np.sin(np.subtract(np.add(safe_log(x[5]), -12.7629), x[5])), np.add(x[5], np.add(x[5], x[5])))))))))))), np.add(np.add(x[5], np.sin(np.subtract(np.sin(safe_log(x[5])), x[5]))), np.add(np.add(-12.7629, np.sin(np.subtract(np.sin(np.add(np.add(x[5], np.sin(np.subtract(safe_log(x[5]), x[5]))), np.sin(np.sin(np.sin(np.subtract(-12.7629, x[5])))))), x[5]))), np.add(x[5], np.add(x[5], np.sin(np.subtract(np.sin(x[5]), safe_sqrt(safe_sqrt(-52.7656))))))))))
